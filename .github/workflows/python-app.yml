name: Executable Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        #os: [macos-latest, windows-latest] #, ubuntu-latest
        os: [windows-latest]
      
    runs-on: ${{ matrix.os }}

    steps:
      # Check-out repository
      - uses: actions/checkout@v3

      #get date
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
      # Setup Python
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python GenerateExecutable.py
          
      #pyinstaller --onefile '--icon=resources\executable_logo.ico' MuseScoreDownloader.py
      #'--name=MuseScoreDownloader_${{ runner.os }}' 

      #upload artifact to make it available
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: dist/*
          name: MuseScoreDownloader_${{ runner.os }}



      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: refs/tags/${{ runner.os }}_build
          #prerelease: false
          title: MuseScoreDownloader script for ${{ runner.os }}
          files: |
            dist/*

      #Create release to make executable available
      - name: Create release 2
        id: create_release
        uses: actions/create-release@latest #actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: executable_script_${{ runner.os }}
          release_name: Release for ${{ runner.os }} (${{ steps.date.outputs.date }})
          body: |
            If you enjoy the tool, please leave a github star!
          draft: false
          prerelease: false








      # # Build python script into a stand-alone exe
      # - name: Build with Nuitka
      #   uses: Nuitka/Nuitka-Action@main
      #   with:
      #     script-name: MuseScoreDownloader.py
      #     name: 
      #     #access-token: ${{ secrets.NUITKA_COMMERCIAL_ACCESS_TOKEN }}
      #     onefile: true
      #     standalone: true
      #     #enable-plugins: pyside6
      #     #disable-console: true
      #     windows-icon-from-ico: resources/executable_logo.ico
          
      # # Uploads artifact
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ runner.os }} build
      #     path: |
      #       build/*.exe
      #       build/*.bin
      #       build/*.app/**/*

      # #Create release to make executable available
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release for ${{ runner.os }} (${{ steps.date.outputs.date }})
      #     body: |
      #       If you enjoy the tool, please leave a github star!
      #     draft: false
      #     prerelease: false

          